JIT_OP_INOT, JIT_OP_LNOT:
    [=local, imm] -> {
        inst = masm_mov_membase_imm(inst, X86_EBP, $1, $2, sourceType);
        x86_not_membase(inst, X86_EBP, $1);
        if(machine_code2) x86_not_membase(inst, X86_EBP, $1 + 4);
    }
    [=local, local] -> {
        if($1 != $2)
        {
            find_one_gp_reg(inst);
            x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
            x86_not_reg(inst, gpreg1);
            x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
            if(machine_code2)
            {
                x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2 + 4, 4);
                x86_not_reg(inst, gpreg1);
                x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg1, 4);
            }
        }
        else
        {
            x86_not_membase(inst, X86_EBP, $1);
            if(machine_code2) x86_not_membase(inst, X86_EBP, $1 + 4);
        }
    }
    [=local, reg] -> {
        if(!jite_gp_reg_is_free(func, $2)) inst = masm_mov_membase_reg(inst, X86_ESP, -8, $2, sourceType);
        x86_not_reg(inst, $2);
        if(machine_code2) x86_not_reg(inst, jite_register_pair($1));
        inst = masm_mov_membase_reg(inst, X86_EBP, $1, $2, sourceType);
        if(!jite_gp_reg_is_free(func, $2)) inst = masm_mov_reg_membase(inst, $2, X86_ESP, -8, sourceType);
    }
    [=reg, imm] -> {
        inst = masm_mov_reg_imm(inst, $1, $2, sourceType);
        x86_not_reg(inst, $1);
        if(machine_code2) x86_not_reg(inst, jite_register_pair($1));
    }
    [=reg, local] -> {
        inst = masm_mov_reg_membase(inst, $1, X86_EBP, $2, sourceType);
        x86_not_reg(inst, $1);
        if(machine_code2) x86_not_reg(inst, jite_register_pair($1));
    }
    [=reg, reg] -> {
        if($1 != $2) inst = masm_mov_reg_reg(inst, $1, $2, sourceType);
        x86_not_reg(inst, $1);
        if(machine_code2) x86_not_reg(inst, jite_register_pair($1));
    }

JIT_OP_ISHL, JIT_OP_ISHR, JIT_OP_ISHR_UN:
    [=local, imm, imm] -> {
        x86_mov_membase_imm(inst, X86_EBP, $1, $2, 4);
        x86_mov_reg_imm(inst, X86_ECX, $3);
        x86_shift_membase(inst, machine_code1, X86_EBP, $1);
    }
    [=local, imm, local] -> {
        x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
        x86_mov_membase_imm(inst, X86_EBP, $1, $2, 4);
        x86_shift_membase(inst, machine_code1, X86_EBP, $1);
    }
    [=local, imm, reg] -> {
        x86_mov_membase_imm(inst, X86_EBP, $1, $2, 4);
        if($3 != X86_ECX) x86_mov_reg_reg(inst, X86_ECX, $3, 4);
        x86_shift_membase(inst, machine_code1, X86_EBP, $1);
    }
    [=local, local, imm] -> {
        if($1 != $2)
        {
            find_one_gp_reg(inst);
            x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
            x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
            x86_shift_membase_imm(inst, machine_code1, X86_EBP, $1, $3);
            
        }
        else x86_shift_membase_imm(inst, machine_code1, X86_EBP, $1, ($3 & 0x1F));
    }
    [=local, local, local] -> {
        if($1 != $2)
        {
            x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $2, 4);
            x86_mov_membase_reg(inst, X86_EBP, $1, X86_ECX, 4);
        }
        x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
        x86_shift_membase(inst, machine_code1, X86_EBP, $1);
    }
    [=local, local, reg] -> {
        if($3 != X86_ECX) x86_mov_reg_reg(inst, X86_ECX, $3, 4);
        if($1 != $2)
        {
            find_one_gp_reg_cond1(inst, X86_ECX);
            x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
            x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
            
        }
        x86_shift_membase(inst, machine_code1, X86_EBP, $1);
    }
    [=local, reg, imm] -> {
        x86_mov_membase_reg(inst, X86_EBP, $1, $2, 4);
        x86_shift_membase_imm(inst, machine_code1, X86_EBP, $1, ($3 & 0x1F));
    }
    [=local, reg, local] -> {
        x86_mov_membase_reg(inst, X86_EBP, $1, $2, 4);
        x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
        x86_shift_membase(inst, machine_code1, X86_EBP, $1);
    }
    [=local, reg, reg] -> {
        x86_mov_membase_reg(inst, X86_EBP, $1, $2, 4);
        if(X86_ECX != $3) x86_mov_reg_reg(inst, X86_ECX, $3, 4);
        x86_shift_membase(inst, machine_code1, X86_EBP, $1);
    }
    [=reg, imm, imm] -> {
        if($1 != X86_ECX)
        {
            x86_mov_reg_imm(inst, $1, $2);
            x86_mov_reg_imm(inst, X86_ECX, $3);
            x86_shift_reg(inst, machine_code1, $1);
        }
        else
        {
            find_one_gp_reg_cond1(inst, X86_ECX);
            x86_mov_reg_imm(inst, gpreg1, $2);
            x86_mov_reg_imm(inst, X86_ECX, $3);
            x86_shift_reg(inst, machine_code1, gpreg1);
            x86_mov_reg_reg(inst, X86_ECX, gpreg1, 4);
            
        }
    }
    [=reg, imm, local] -> {
        if($1 != X86_ECX)
        {
            x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
            x86_mov_reg_imm(inst, $1, $2);
            x86_shift_reg(inst, machine_code1, $1);
        }
        else
        {
            find_one_gp_reg_cond1(inst, X86_ECX);
            x86_mov_reg_imm(inst, gpreg1, $2);
            x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
            x86_shift_reg(inst, machine_code1, gpreg1);
            x86_mov_reg_reg(inst, X86_ECX, gpreg1, 4);
            
        }
    }
    [=reg, imm, reg] -> {
        if($1 != X86_ECX && $3 != X86_ECX)
        {
            x86_mov_reg_reg(inst, X86_ECX, $3, 4);
            x86_mov_reg_imm(inst, $1, $2);
            x86_shift_reg(inst, machine_code1, $1);
        }
        else if($1 == X86_ECX && $3 == X86_ECX)
        {
            find_one_gp_reg(inst);
            x86_mov_reg_imm(inst, gpreg1, $2);
            x86_shift_reg(inst, machine_code1, gpreg1);
            x86_mov_reg_reg(inst, X86_ECX, gpreg1, 4);
            
        }
        else if($3 == X86_ECX)
        {
            x86_mov_reg_imm(inst, $1, $2);
            x86_shift_reg(inst, machine_code1, $1);    
        }
        else if($1 == X86_ECX)
        {
            x86_mov_reg_reg(inst, X86_ECX, $3, 4);
            find_one_gp_reg_cond1(inst, $1);
            x86_mov_reg_imm(inst, gpreg1, $2);
            x86_shift_reg(inst, machine_code1, gpreg1);
            x86_mov_reg_reg(inst, $1, gpreg1, 4);
            
        }
    }
    [=reg, local, imm] -> {
        x86_mov_reg_membase(inst, $1, X86_EBP, $2, 4);
        x86_shift_reg_imm(inst, machine_code1, $1, ($3 & 0x1F));
    }
    [=reg, local, local] -> {
        if($1 != X86_ECX)
        {
            x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
            x86_mov_reg_membase(inst, $1, X86_EBP, $2, 4);
            x86_shift_reg(inst, machine_code1, $1);
        }
        else
        {
            find_one_gp_reg(inst);
            x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
            x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
            x86_shift_reg(inst, machine_code1, gpreg1);
            x86_mov_reg_reg(inst, X86_ECX, gpreg1, 4);
            
        }
    }
    [=reg, local, reg] -> {
        if($3 != X86_ECX)
        {
            if($1 != X86_ECX)
            {
                x86_mov_reg_reg(inst, X86_ECX, $3, 4);
                x86_mov_reg_membase(inst, $1, X86_EBP, $2, 4);
                x86_shift_reg(inst, machine_code1, $1);
            }
            else
            {
                find_one_gp_reg_cond1(inst, X86_ECX);
                x86_mov_reg_reg(inst, X86_ECX, $3, 4);
                x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
                x86_shift_reg(inst, machine_code1, gpreg1);
                x86_mov_reg_reg(inst, X86_ECX, gpreg1, 4);
                
            }
        }
        else
        {
            if($1 != X86_ECX)
            {
                x86_mov_reg_membase(inst, $1, X86_EBP, $2, 4);
                x86_shift_reg(inst, machine_code1, $1);
            }
            else
            {
                find_one_gp_reg_cond1(inst, X86_ECX);
                x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
                x86_shift_reg(inst, machine_code1, gpreg1);
                x86_mov_reg_reg(inst, X86_ECX, gpreg1, 4);
                
            }
        }
    }
    [=reg, reg, imm] -> {
        if($1 != $2) x86_mov_reg_reg(inst, $1, $2, 4);
        x86_shift_reg_imm(inst, machine_code1, $1, ($3 & 0x1F));
    }
    [=reg, reg, local] -> {
        if($1 != X86_ECX)
        {
            x86_mov_reg_reg(inst, $1, $2, 4);
            x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
            x86_shift_reg(inst, machine_code1, $1);
        }
        else
        {
            find_one_gp_reg_cond1(inst, X86_ECX);
            x86_mov_reg_reg(inst, gpreg1, $2, 4);
            x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
            x86_shift_reg(inst, machine_code1, gpreg1);
            x86_mov_reg_reg(inst, $1, gpreg1, 4);
            
        }
    }
    [=reg, reg, reg] -> {
        if($2 != X86_ECX)
        {
            x86_mov_reg_reg(inst, X86_ECX, $3, 4);
            if(jite_gp_reg_is_free(func, $2))
            {
                x86_shift_reg(inst, machine_code1, $2);
                x86_mov_reg_reg(inst, $1, $2, 4);
            }
            else if($1 != X86_ECX)
            {
                x86_mov_reg_reg(inst, $1, $2, 4);
                x86_shift_reg(inst, machine_code1, $1);
            }
            else
            {
                find_one_gp_reg_cond1(inst, X86_ECX);
                x86_mov_reg_reg(inst, gpreg1, $2, 4);
                x86_shift_reg(inst, machine_code1, gpreg1);
                x86_mov_reg_reg(inst, $1, gpreg1, 4);
                
            }
        }
        else if($1 != X86_ECX && $1 != $3)
        {    
            x86_mov_reg_reg(inst, $1, $2, 4);
            x86_mov_reg_reg(inst, X86_ECX, $3, 4);
            x86_shift_reg(inst, machine_code1, $1);
        }
        else 
        {    
            find_one_gp_reg_cond2(inst, X86_ECX, $3);
            x86_mov_reg_reg(inst, gpreg1, $2, 4);
            x86_mov_reg_reg(inst, X86_ECX, $3, 4);
            x86_shift_reg(inst, machine_code1, gpreg1);
            x86_mov_reg_reg(inst, $1, gpreg1, 4);
            
        }
    }

/*
// TODO
JIT_OP_LSHL:
    [=local, imm, imm] -> {
        jit_uint low_dword = ((jit_uint *)$2)[0];
        jit_uint high_dword = ((jit_uint *)$2)[1];
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_imm(inst, X86_ECX, $3 & 0x3F);
        x86_mov_reg_imm(inst, gpreg1, low_dword);
        x86_mov_reg_imm(inst, gpreg2, high_dword);
        inst = masm_lshl(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, imm, local] -> {
        jit_uint low_dword = ((jit_uint *)$2)[0];
        jit_uint high_dword = ((jit_uint *)$2)[1];
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
        x86_mov_reg_imm(inst, gpreg1, low_dword);
        x86_mov_reg_imm(inst, gpreg2, high_dword);
        inst = masm_lshl(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, imm, reg] -> {
        jit_uint low_dword = ((jit_uint *)$2)[0];
        jit_uint high_dword = ((jit_uint *)$2)[1];
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_reg(inst, X86_ECX, $3, 4);
        x86_mov_reg_imm(inst, gpreg1, low_dword);
        x86_mov_reg_imm(inst, gpreg2, high_dword);
        inst = masm_lshl(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, local, imm] -> {
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_imm(inst, X86_ECX, $3 & 0x3F);
        x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
        x86_mov_reg_membase(inst, gpreg2, X86_EBP, $2 + 4, 4);
        inst = masm_lshl(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, local, local] -> {
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
        x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
        x86_mov_reg_membase(inst, gpreg2, X86_EBP, $2 + 4, 4);
        inst = masm_lshl(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, local, reg] -> {
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_reg(inst, X86_ECX, $3, 4);
        x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
        x86_mov_reg_membase(inst, gpreg2, X86_EBP, $2 + 4, 4);
        inst = masm_lshl(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }

JIT_OP_LSHR_UN:
    [=local, imm, imm] -> {
        jit_uint low_dword = ((jit_uint *)((void *)$2))[0];
        jit_uint high_dword = ((jit_uint *)((void *)$2))[1];
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_imm(inst, X86_ECX, $3 & 0x3F);
        x86_mov_reg_imm(inst, gpreg1, low_dword);
        x86_mov_reg_imm(inst, gpreg2, high_dword);
        inst = masm_lshr_un(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, imm, local] -> {
        jit_uint low_dword = ((jit_uint *)((void *)$2))[0];
        jit_uint high_dword = ((jit_uint *)((void *)$2))[1];
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
        x86_mov_reg_imm(inst, gpreg1, low_dword);
        x86_mov_reg_imm(inst, gpreg2, high_dword);
        inst = masm_lshr_un(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, imm, reg] -> {
        jit_uint low_dword = ((jit_uint *)((void *)$2))[0];
        jit_uint high_dword = ((jit_uint *)((void *)$2))[1];
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_reg(inst, X86_ECX, $3, 4);
        x86_mov_reg_imm(inst, gpreg1, low_dword);
        x86_mov_reg_imm(inst, gpreg2, high_dword);
        inst = masm_lshr_un(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, local, imm] -> {
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_imm(inst, X86_ECX, $3 & 0x3F);
        x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
        x86_mov_reg_membase(inst, gpreg2, X86_EBP, $2 + 4, 4);
        inst = masm_lshr_un(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, local, local] -> {
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_membase(inst, X86_ECX, X86_EBP, $3, 4);
        x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
        x86_mov_reg_membase(inst, gpreg2, X86_EBP, $2 + 4, 4);
        inst = masm_lshr_un(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
    [=local, local, reg] -> {
        find_two_gp_regs_cond1(inst, X86_ECX);
        x86_mov_reg_reg(inst, X86_ECX, $3, 4);
        x86_mov_reg_membase(inst, gpreg1, X86_EBP, $2, 4);
        x86_mov_reg_membase(inst, gpreg2, X86_EBP, $2 + 4, 4);
        inst = masm_lshr_un(inst, gpreg1, gpreg2);
        x86_mov_membase_reg(inst, X86_EBP, $1, gpreg1, 4);
        x86_mov_membase_reg(inst, X86_EBP, $1 + 4, gpreg2, 4);
        
    }
*/
